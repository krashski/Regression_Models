main="Enhanced Scatter Plot",
labels=row.names(mtcars))
library(lattice)
splom(mtcars[c(1,3,5,6)], groups=cyl, data=mtcars,
panel=panel.superpose,
key=list(title="Three Cylinder Options",
columns=3,
points=list(pch=super.sym$pch[1:3],
col=super.sym$col[1:3]),
text=list(c("4 Cylinder","6 Cylinder","8 Cylinder"))))
splom(mtcars, groups = am, data = mtcars, panel = panel.superpose)
splom(mtcars, groups = mtcars$am, data = mtcars, panel = panel.superpose)
library(car)
scatterplot.matrix(~ mpg + .|am, data = mtcars)
scatterplot.matrix(~ mpg + disp + drat + wt|am, data = mtcars,
main = "Transmission")
scatterplotMatrix(~ mpg + disp + drat + wt|am, data = mtcars,
main = "Transmission")
cor(mtcars)
scatterplot(mpg ~ wt | am, data = mtcars,
xlab = "Weight of Car", ylab = "Miles Per Gallon",
main = "Enhanced Scatter Plot",
labels = row.names(mtcars))
?mtcars
cardata <- mtcars
rm(mtcars)
?mtcars
cardata$am <- factor(cardata$am,
levels = c(0, 1),
labels = c("Automatic", "Manual"))
table(cardata$am)
scatterplot(mpg ~ wt | am, data = cardata,
xlab = "Weight of Car", ylab = "Miles Per Gallon")
names(cardata)
scatterplotMatrix(mpg ~ wt + cyl + disp + hp + carb | am,
data = cardata, ylab = "Miles Per Gallon")
scatterplotMatrix(~ mpg + wt + cyl + disp + hp + carb | am,
data = cardata, ylab = "Miles Per Gallon")
scatterplotMatrix(~mpg+wt+cyl+disp+hp+carb|am,
data = cardata, ylab = "Miles Per Gallon")
scatterplot.matrix(~mpg+disp+drat+wt|am, data=cardata)
tapply(mtcars, mtcars$am, mean)
tapply(mtcars$., mtcars$am, mean)
tapply(mtcars$wt, mtcars$am, mean)
tapply(mtcars$cyl, mtcars$am, mean)
tapply(mtcars$disp, mtcars$am, mean)
tapply(mtcars$hp, mtcars$am, mean)
tapply(mtcars$carb, mtcars$am, mean)
tapply(mtcars$drat, mtcars$am, mean)
tapply(mtcars$qsec, mtcars$am, mean)
tapply(mtcars$vs, mtcars$am, mean)
tapply(mtcars$gear, mtcars$am, mean)
data(mtcars)
names(mtcars)
plot(mpg ~ cyl, data = mtcars)
library(lattice)
splom(mtcars)
cor(mtcars[, 1], mtcars [, -1])
fit <- lm(mpg ~ wt + drat + qsec + vs + gear + carb, mtcars)
library(car)
summary(fit)
vif(fit)
fit <- lm(mpg ~ wt + drat + qsec + vs + gear + carb + am, mtcars)
summary(fit)
vif(fit)
fit1 <- lm(mpg ~ am, mtcars)
fit2 <- lm(mpg ~ am + carb, mtcars)
anova(fit1, fit2)
fit3 <- lm(mpg ~ am + carb + drat, mtcars)
anova(fit1, fit2, fit3)
plot(fit3, which = 1)
plot(fit3, which = 2)
plot(fit3, which = 3)
plot(fit3, which = 4)
plot(fit3, which = 5)
fit2 <- lm(mpg ~ am + hp, mtcars)
fit3 <- lm(mpg ~ am + hp + gear, mtcars)
anova(fit1, fit2, fit3)
fit3 <- lm(mpg ~ am + hp + vs, mtcars)
anova(fit1, fit2, fit3)
fit3 <- lm(mpg ~ am + hp + vs, mtcars)
fit3 <- lm(mpg ~ am + hp + drat, mtcars)
anova(fit1, fit2, fit3)
fit3 <- lm(mpg ~ am + hp + qsec, mtcars)
anova(fit1, fit2, fit3)
fit3 <- lm(mpg ~ am + hp + wt, mtcars)
anova(fit1, fit2, fit3)
data(mtcars)
fitall <- summary(lm(mpg ~ factor(am)*.,data=mtcars))
summary(fitall)
fitall
library(car)
vif(fitall)
fitall <- lm(mpg ~ factor(am)*.,data=mtcars)
vif(fitall)
fitall <- lm(mpg ~ .,data=mtcars)
vif(fitall)
data(mtcars)
tapply(mtcars$mpg, mtcars$cyl, mean)
table(mtcars$cyl, mtcars$am)
table(mtcars$am, mtcars$cyl)
table(mtcars$disp, mtcars$am)
tapply(mtcars$mpg, mtcars$disp, mean)
tapply(mtcars$mpg, mtcars$hp, mean)
tapply(mtcars$mpg, mtcars$drat, mean)
cor(mtcars)
?mtcars
fit <- lm(mpg ~ am + wgt + hp + cyl, mtcars)
fit <- lm(mpg ~ am + wt + hp + cyl, mtcars)
summary(fit)
library(car)
vif(car)
vif(fit)
fit <- lm(mpg ~ am + wt + hp, mtcars)
summary(fit)
vif(fit)
cor(mtcars[,1 ])
cor(mtcars[,1 ], mtcars)
fit <- lm(mpg ~ am + wt + cyl, mtcars)
summary(fit)
vif(fit)
cor(mtcars$cyl, mtcars$hp)
fit <- lm(mpg ~ am + wt + hp + drat + vs, mtcars)
summary(fit)
vif(fit)
fit2 <- lm(mpg ~ am + wt + hp + drat + vs, mtcars)
fit1 <- lm(mpg ~ am + wt + hp, mtcars)
anova(fit1, fit2)
cars <- mtcars
cars$p2w <- cars$hp / cars$wt
cor(cars$mpg, mpg$p2w)
cor(cars$mpg, cars$p2w)
fit2 <- lm(mpg ~ am + p2w, mtcars)
fit2 <- lm(mpg ~ am + p2w, cars)
fit1 <- lm(mpg ~ am, cars)
anova(fit1, fit2)
vif(fit2)
tapply(cars$p2w, cars$am, mean)
fit2 <- lm(mpg ~ am + wt + p2w, cars)
fit1 <- lm(mpg ~ am + wt, cars)
anova(fit1, fit2)
vif(fit2)
fit2 <- lm(mpg ~ am + p2w, cars)
summary(fit2)
vif(fit2)
cor(cars[, 1] cars)
cor(cars[, 1], cars)
cor(cars[, 12], cars)
plot(p2w, mpg, data = cars)
plot(cars$p2w, cars$mpg)
plot(cars$p2w, cars$mpg, pch = 20)
summary(cars$p2w)
cars
cars[, c(1:9, 12)]
tapply(cars$p2w, cars$cyl, mean)
data(mtcars)
names(mtcars)
cor(mtcars)
# load the data
data(mtcars)
df.car <- mtcars # duplicate data file so as not to modify original
rm(mtcars)
# load required packages
library(car)
library(lattice)
library(psych)
# convert am and cyl variables to factors for boxplot
df.car$am <- factor(df.car$am, labels = c("Automatic", "Manual"))
df.car$cyl <- factor(df.car$cyl, labels = c("4 cyl", "6 cyl", "8 cyl"))
# exploratory data analysis
with(df.car, bwplot(mpg ~ am | cyl, layout = c(3, 1),
main = "Fuel Economy by Number of Cylinders and Transmission Type",
xlab = "Transmission Type", ylab = "Miles Per Gallon"))
# convert am and cyl variables back to numeric for correlations
df.car$am <- as.numeric(df.car$am)
df.car$cyl <- as.numeric(df.car$cyl)
# scatterplot matrix
pairs.panels(df.car[, c(1, 2, 3, 4, 6, 11)],
main = "Predictors Negatively Correlated With MPG")
pairs.panels(df.car[, c(1, 5, 7, 8, 9, 10)],
main = "Predictors Positively Correlated With MPG")
# convert am and vs variables to factors for regression models
df.car$am <- factor(df.car$am, labels = c("Automatic", "Manual"))
df.car$vs <- factor(df.car$vs, labels = c("V", "Straight"))
# full model
f1 <- lm(mpg ~., df.car)
summary(f1)
vif(f1)
# create power-to-weight ratio variable
df.car$p2w <- df.car$hp / df.car$wt # number of hp per 1000lbs
# create new models starting with power-to-weight and am and
# adding remaining variables in decreasing order of correlation with mpg
f2 <- lm(mpg ~ p2w + am, df.car)
f3 <- lm(mpg ~ p2w + am + drat, df.car)
f4 <- lm(mpg ~ p2w + am + drat + vs, df.car)
f5 <- lm(mpg ~ p2w + am + drat + vs + gear, df.car)
f6 <- lm(mpg ~ p2w + am + drat + vs + gear + qsec, df.car)
# evaluate models
anova(f2, f3, f4, f5, f6)
# summary stats for final model
summary(f4)
par(mfrow = c(2, 2))
plot(f4)
par(mfrow = c(1, 1))
vif(f4)
# test residuals for normality
shapiro.test(residuals(f4))
with(df.car, bwplot(mpg ~ am | cyl, layout = c(3, 1),
main = "Fuel Economy by Number of Cylinders and Transmission Type",
xlab = "Transmission Type", ylab = "Miles Per Gallon"))
install.packages(c("boot", "caret", "codetools", "earth", "evaluate", "formatR", "Formula", "futile.logger", "gdata", "glmnet", "gplots", "gtools", "highr", "Hmisc", "jsonlite", "knitr", "lattice", "manipulate", "markdown", "MASS", "Matrix", "mgcv", "numDeriv", "partykit", "plotmo", "plyr", "prettyR", "pROC", "psych", "R.utils", "RANN", "Rcpp", "RCurl", "RMySQL", "sp", "stringr"))
# load the data
data(mtcars)
df.car <- mtcars # duplicate data file so as not to modify original
rm(mtcars)
# load required packages
library(car)
library(lattice)
library(psych)
# convert am and cyl variables to factors for boxplot
df.car$am <- factor(df.car$am, labels = c("Automatic", "Manual"))
df.car$cyl <- factor(df.car$cyl, labels = c("4 cyl", "6 cyl", "8 cyl"))
# exploratory data analysis
with(df.car, bwplot(mpg ~ am | cyl, layout = c(3, 1),
main = "Fuel Economy by Number of Cylinders and Transmission Type",
xlab = "Transmission Type", ylab = "Miles Per Gallon"))
# convert am and cyl variables back to numeric for correlations
df.car$am <- as.numeric(df.car$am)
df.car$cyl <- as.numeric(df.car$cyl)
# scatterplot matrix
pairs.panels(df.car[, c(1, 2, 3, 4, 6, 11)],
main = "Predictors Negatively Correlated With MPG")
pairs.panels(df.car[, c(1, 5, 7, 8, 9, 10)],
main = "Predictors Positively Correlated With MPG")
# convert am and vs variables to factors for regression models
df.car$am <- factor(df.car$am, labels = c("Automatic", "Manual"))
df.car$vs <- factor(df.car$vs, labels = c("V", "Straight"))
# full model
f1 <- lm(mpg ~., df.car)
summary(f1)
vif(f1)
# create power-to-weight ratio variable
df.car$p2w <- df.car$hp / df.car$wt # number of hp per 1000lbs
# create new models starting with power-to-weight and am and
# adding remaining variables in decreasing order of correlation with mpg
f2 <- lm(mpg ~ p2w + am, df.car)
f3 <- lm(mpg ~ p2w + am + drat, df.car)
f4 <- lm(mpg ~ p2w + am + drat + vs, df.car)
f5 <- lm(mpg ~ p2w + am + drat + vs + gear, df.car)
f6 <- lm(mpg ~ p2w + am + drat + vs + gear + qsec, df.car)
# evaluate models
anova(f2, f3, f4, f5, f6)
# summary stats for final model
summary(f4)
par(mfrow = c(2, 2))
plot(f4)
par(mfrow = c(1, 1))
vif(f4)
# test residuals for normality
shapiro.test(residuals(f4))
with(df.car, bwplot(mpg ~ am | cyl, layout = c(3, 1),
main = "Fuel Economy by Number of Cylinders and Transmission Type",
xlab = "Transmission Type", ylab = "Miles Per Gallon"))
# load the data
data(mtcars)
df.car <- mtcars # duplicate data file so as not to modify original
rm(mtcars)
library(car)
library(lattice)
# convert am and cyl variables to factors for boxplot
df.car$am <- factor(df.car$am, labels = c("Automatic", "Manual"))
df.car$cyl <- factor(df.car$cyl, labels = c("4 cyl", "6 cyl", "8 cyl"))
# exploratory data analysis
with(df.car, bwplot(mpg ~ am | cyl, layout = c(3, 1),
main = "Fuel Economy by Number of Cylinders and Transmission Type",
xlab = "Transmission Type", ylab = "Miles Per Gallon"))
# load the data
data(mtcars)
df.car <- mtcars # duplicate data file so as not to modify original
rm(mtcars)
# load required packages
# convert am and cyl variables to factors for boxplot
df.car$am <- factor(df.car$am, labels = c("Automatic", "Manual"))
df.car$cyl <- factor(df.car$cyl, labels = c("4 cyl", "6 cyl", "8 cyl"))
# exploratory data analysis
library(lattice)
with(df.car, bwplot(mpg ~ am | cyl, layout = c(3, 1),
main = "Fuel Economy by Number of Cylinders and Transmission Type",
xlab = "Transmission Type", ylab = "Miles Per Gallon"))
# convert am and cyl variables back to numeric for correlations
df.car$am <- as.numeric(df.car$am)
df.car$cyl <- as.numeric(df.car$cyl)
# scatterplot matrix
library(psych)
pairs.panels(df.car[, c(1, 2, 3, 4, 6, 11)],
main = "Predictors Negatively Correlated With MPG")
pairs.panels(df.car[, c(1, 5, 7, 8, 9, 10)],
main = "Predictors Positively Correlated With MPG")
# convert am and vs variables to factors for regression models
df.car$am <- factor(df.car$am, labels = c("Automatic", "Manual"))
df.car$vs <- factor(df.car$vs, labels = c("V", "Straight"))
# full model
library(car) # for VIF calculation
f1 <- lm(mpg ~., df.car)
summary(f1)
vif(f1)
# create power-to-weight ratio variable
df.car$p2w <- df.car$hp / df.car$wt # number of hp per 1000lbs
# create new models starting with power-to-weight and am and
# adding remaining variables in decreasing order of correlation with mpg
f2 <- lm(mpg ~ p2w + am, df.car)
f3 <- lm(mpg ~ p2w + am + drat, df.car)
f4 <- lm(mpg ~ p2w + am + drat + vs, df.car)
f5 <- lm(mpg ~ p2w + am + drat + vs + gear, df.car)
f6 <- lm(mpg ~ p2w + am + drat + vs + gear + qsec, df.car)
# evaluate models
anova(f2, f3, f4, f5, f6)
# summary stats for final model
summary(f4)
par(mfrow = c(2, 2))
plot(f4)
par(mfrow = c(1, 1))
vif(f4)
# test residuals for normality
shapiro.test(residuals(f4))
# load the data
data(mtcars)
df.car <- mtcars # duplicate data file so as not to modify original
rm(mtcars)
# convert am and cyl variables to factors for boxplot
df.car$am <- factor(df.car$am, labels = c("Automatic", "Manual"))
df.car$cyl <- factor(df.car$cyl, labels = c("4 cyl", "6 cyl", "8 cyl"))
library(lattice)
with(df.car, bwplot(mpg ~ am | cyl, layout = c(3, 1),
main = "Fuel Economy by Number of Cylinders and Transmission Type",
xlab = "Transmission Type", ylab = "Miles Per Gallon"))
# convert am and cyl variables back to numeric for correlations
df.car$am <- as.numeric(df.car$am)
df.car$cyl <- as.numeric(df.car$cyl)
# scatterplot matrix
library(psych)
pairs.panels(df.car[, c(1, 2, 3, 4, 6, 11)],
main = "Predictors Negatively Correlated With MPG")
pairs.panels(df.car[, c(1, 5, 7, 8, 9, 10)],
main = "Predictors Positively Correlated With MPG")
# convert am and cyl variables back to numeric for correlations
df.car$am <- as.numeric(df.car$am)
df.car$cyl <- as.numeric(df.car$cyl)
# scatterplot matrix
library(psych)
pairs.panels(df.car[, c(1, 2, 3, 4, 6, 11)],
main = "Predictors Negatively Correlated With MPG")
pairs.panels(df.car[, c(1, 5, 7, 8, 9, 10)],
main = "Predictors Positively Correlated With MPG")
# convert am and vs variables to factors for regression models
df.car$am <- factor(df.car$am, labels = c("Automatic", "Manual"))
df.car$vs <- factor(df.car$vs, labels = c("V", "Straight"))
# full model
library(car) # for VIF calculation
f1 <- lm(mpg ~., df.car)
summary(f1)
vif(f1)
# create power-to-weight ratio variable
df.car$p2w <- df.car$hp / df.car$wt # number of hp per 1000lbs
# create new models starting with power-to-weight and am and
# adding remaining variables in decreasing order of correlation with mpg
f2 <- lm(mpg ~ p2w + am, df.car)
f3 <- lm(mpg ~ p2w + am + drat, df.car)
f4 <- lm(mpg ~ p2w + am + drat + vs, df.car)
f5 <- lm(mpg ~ p2w + am + drat + vs + gear, df.car)
f6 <- lm(mpg ~ p2w + am + drat + vs + gear + qsec, df.car)
# evaluate models
anova(f2, f3, f4, f5, f6)
# summary stats for final model
summary(f4)
par(mfrow = c(2, 2))
plot(f4)
par(mfrow = c(1, 1))
vif(f4)
# test residuals for normality
shapiro.test(residuals(f4))
with(df.car, bwplot(mpg ~ am | cyl, layout = c(3, 1),
main = "Fuel Economy by Number of Cylinders and Transmission Type",
xlab = "Transmission Type", ylab = "Miles Per Gallon"))
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
mu <- 0.1471
ls <- sum(w * (x - mu)^2)
ls
mu <- 1.077
ls <- sum(w * (x - mu)^2)
ls
mu <- .0025
ls <- sum(w * (x - mu)^2)
ls
mu <- .3
ls <- sum(w * (x - mu)^2)
ls
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
fit <- lm(y ~ x)
summary(fit)
data(mtcars)
fit2 <- lm(mpg ~ wt, mtcars)
summary(fit)
summary(fit2)
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
xn <- (x - mean(x)) / sd(x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
fit <- lm(y ~ x)
summary(fit)
1.5*.4
1.5*(.4)^2
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- .573
ssd <- (x - y)^2
ssd
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- .573
ssd <- sum((x - y)^2)
ssd
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- .8
ssd <- sum((x - y)^2)
ssd
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- .36
ssd <- sum((x - y)^2)
ssd
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- .44
ssd <- sum((x - y)^2)
ssd
sdy <- 1
sdx <- 0.5
cor <- 0.5
b <- cor * sdy / sdx
b
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
fit <- lm(x ~ y)
summary(fit)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
fit <- lm(y ~ x - 1)
summary(fit)
b1 <- 0
b0 <- 0 - b1 *0
setwd("~/Documents/Coursera/Assignments/Regression_Models")
?mtcars
?pairs.panels
??pairs.panels
install.packages("stargazer")
f1 <- lm(mpg ~., df.car)
data(mtcars)
df.car <- mtcars # duplicate data file so as not to modify original
rm(mtcars)
library(car)
?stargazer
library("stargazer", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
?stargazer
example(stargazer)
data(mtcars)
df.car <- mtcars # duplicate data file so as not to modify original
rm(mtcars)
# load required packages
library(car)
library(lattice)
library(psych)
# full model
f1 <- lm(mpg ~., df.car)
summary(f1)
f1
?lm
type(f1)
class(f1)
summary(f1)$coef
summary(f1)$model
summary(f1)$terms
summary(f1)$fstatistic
summary(f1)$r.squared
style = 'all', single.row = TRUE, ci = FALSE)
style = 'all', single.row = FALSE, ci = FALSE)
?summary.lm
summary(f1)$-coef
summary(f1)$[1, ]
summary(f1)
f1
?f1
Further exploratory analysis in Figure 2 shows that predictors that are negatively correlated with MPG are all indicators of a car's size (e.g., number of cylinders, engine displacement, horsepower, number of carburators, weight). These predictors are also very highly intercorrelated, which suggests that multicollinearity will be a concern. To address this issue, a power-to-weight ratio variable was computed by dividing a car's horsepower by its weight. Figure 3 shows the predictors that are positively correlated with MPG.
?plot
?text
df.car[28, ]
df.car$p2w <- df.car$hp / df.car$wt # number of hp per 1000lbs
df.car[28, ]
df.car$p2w[28, ]
df.car$p2w[28]
?legend
row.names(df.car)
row.names(df.car[28])
row.names(df.car)[28]
?plot
confint(f1)2
confint(f1)$2
confint(f1)[2]
confint(f1)[2, ]
4/.125
4/32
?summary
print.summary.lm(f1)
summary(f1)$coef
